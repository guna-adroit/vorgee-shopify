{% doc %}
  @prompt
    I want an automatic image slider

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-image-slider-{{ ai_gen_id }} {
    position: relative;
    width: 100%;
    max-width: {{ block.settings.max_width }}px;
    margin: 0 auto;
    overflow: hidden;
    border-radius: {{ block.settings.border_radius }}px;
    background-color: {{ block.settings.background_color }};
  }

  .ai-image-slider__container-{{ ai_gen_id }} {
    position: relative;
    width: 100%;
    height: {{ block.settings.slider_height }}px;
  }

  .ai-image-slider__track-{{ ai_gen_id }} {
    display: flex;
    width: 100%;
    height: 100%;
    transition: transform 0.5s ease-in-out;
  }

  .ai-image-slider__slide-{{ ai_gen_id }} {
    flex: 0 0 100%;
    width: 100%;
    height: 100%;
    position: relative;
  }

  .ai-image-slider__image-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
  }

  .ai-image-slider__placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    background-color: #f4f4f4;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
  }

  .ai-image-slider__placeholder-{{ ai_gen_id }} svg {
    width: 100%;
    height: 100%;
    max-width: 200px;
    max-height: 200px;
    opacity: 0.3;
  }

  .ai-image-slider__empty-state-{{ ai_gen_id }} {
    position: absolute;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    padding: 12px 20px;
    background-color: rgba(255, 255, 255, 0.9);
    border-radius: 8px;
    font-size: 14px;
    color: #666;
    text-align: center;
    pointer-events: none;
  }

  .ai-image-slider__content-{{ ai_gen_id }} {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    background: linear-gradient(transparent, rgba(0, 0, 0, 0.7));
    color: white;
    padding: 40px 30px 30px;
    text-align: {{ block.settings.text_alignment }};
  }

  .ai-image-slider__title-{{ ai_gen_id }} {
    font-size: {{ block.settings.title_size }}px;
    font-weight: 600;
    margin: 0 0 8px;
    line-height: 1.2;
  }

  .ai-image-slider__description-{{ ai_gen_id }} {
    font-size: {{ block.settings.description_size }}px;
    margin: 0;
    opacity: 0.9;
    line-height: 1.4;
  }

  .ai-image-slider__dots-{{ ai_gen_id }} {
    display: flex;
    justify-content: center;
    gap: 8px;
    position: absolute;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    z-index: 2;
  }

  .ai-image-slider__dot-{{ ai_gen_id }} {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background-color: rgba(255, 255, 255, 0.5);
    border: none;
    cursor: pointer;
    transition: background-color 0.3s ease;
  }

  .ai-image-slider__dot-{{ ai_gen_id }}.active {
    background-color: {{ block.settings.dot_active_color }};
  }

  .ai-image-slider__arrows-{{ ai_gen_id }} {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background-color: rgba(255, 255, 255, 0.8);
    border: none;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: background-color 0.3s ease;
    z-index: 2;
  }

  .ai-image-slider__arrows-{{ ai_gen_id }}:hover {
    background-color: rgba(255, 255, 255, 1);
  }

  .ai-image-slider__arrow-prev-{{ ai_gen_id }} {
    left: 20px;
  }

  .ai-image-slider__arrow-next-{{ ai_gen_id }} {
    right: 20px;
  }

  .ai-image-slider__arrows-{{ ai_gen_id }} svg {
    width: 20px;
    height: 20px;
    color: #333;
  }

  @media screen and (max-width: 749px) {
    .ai-image-slider__container-{{ ai_gen_id }} {
      height: {{ block.settings.slider_height | times: 0.7 }}px;
    }

    .ai-image-slider__content-{{ ai_gen_id }} {
      padding: 20px 20px 15px;
    }

    .ai-image-slider__title-{{ ai_gen_id }} {
      font-size: {{ block.settings.title_size | times: 0.8 }}px;
    }

    .ai-image-slider__description-{{ ai_gen_id }} {
      font-size: {{ block.settings.description_size | times: 0.9 }}px;
    }

    .ai-image-slider__arrows-{{ ai_gen_id }} {
      width: 35px;
      height: 35px;
    }

    .ai-image-slider__arrow-prev-{{ ai_gen_id }} {
      left: 10px;
    }

    .ai-image-slider__arrow-next-{{ ai_gen_id }} {
      right: 10px;
    }
  }
{% endstyle %}

<image-slider-{{ ai_gen_id }}
  class="ai-image-slider-{{ ai_gen_id }}"
  data-autoplay="{{ block.settings.autoplay }}"
  data-autoplay-speed="{{ block.settings.autoplay_speed }}"
  {{ block.shopify_attributes }}
>
  <div class="ai-image-slider__container-{{ ai_gen_id }}">
    <div class="ai-image-slider__track-{{ ai_gen_id }}">
      {% for i in (1..5) %}
        {% liquid
          assign image_key = 'image_' | append: i
          assign title_key = 'title_' | append: i
          assign description_key = 'description_' | append: i
          assign image = block.settings[image_key]
          assign title = block.settings[title_key]
          assign description = block.settings[description_key]
        %}

        {% if image != blank or i == 1 %}
          <div class="ai-image-slider__slide-{{ ai_gen_id }}" data-slide="{{ forloop.index0 }}">
            {% if image %}
              <img
                src="{{ image | image_url: width: 1200 }}"
                alt="{{ image.alt | escape }}"
                class="ai-image-slider__image-{{ ai_gen_id }}"
                loading="{% if forloop.first %}eager{% else %}lazy{% endif %}"
                width="{{ image.width }}"
                height="{{ image.height }}"
              >
            {% else %}
              <div class="ai-image-slider__placeholder-{{ ai_gen_id }}">
                {{ 'image' | placeholder_svg_tag }}
                {% if i == 1 %}
                  <div class="ai-image-slider__empty-state-{{ ai_gen_id }}">
                    Add images to create your slider
                  </div>
                {% endif %}
              </div>
            {% endif %}

            {% if title != blank or description != blank %}
              <div class="ai-image-slider__content-{{ ai_gen_id }}">
                {% if title != blank %}
                  <h3 class="ai-image-slider__title-{{ ai_gen_id }}">{{ title }}</h3>
                {% endif %}
                {% if description != blank %}
                  <p class="ai-image-slider__description-{{ ai_gen_id }}">{{ description }}</p>
                {% endif %}
              </div>
            {% endif %}
          </div>
        {% endif %}
      {% endfor %}
    </div>

    {% if block.settings.show_arrows %}
      <button class="ai-image-slider__arrows-{{ ai_gen_id }} ai-image-slider__arrow-prev-{{ ai_gen_id }}" aria-label="Previous slide">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <polyline points="15,18 9,12 15,6"></polyline>
        </svg>
      </button>
      <button class="ai-image-slider__arrows-{{ ai_gen_id }} ai-image-slider__arrow-next-{{ ai_gen_id }}" aria-label="Next slide">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <polyline points="9,18 15,12 9,6"></polyline>
        </svg>
      </button>
    {% endif %}

    {% if block.settings.show_dots %}
      <div class="ai-image-slider__dots-{{ ai_gen_id }}"></div>
    {% endif %}
  </div>
</image-slider-{{ ai_gen_id }}>

<script>
  (function() {
    class ImageSlider{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.currentSlide = 0;
        this.autoplayInterval = null;
        this.slides = [];
      }

      connectedCallback() {
        this.track = this.querySelector('.ai-image-slider__track-{{ ai_gen_id }}');
        this.slides = Array.from(this.querySelectorAll('.ai-image-slider__slide-{{ ai_gen_id }}'));
        this.dotsContainer = this.querySelector('.ai-image-slider__dots-{{ ai_gen_id }}');
        this.prevButton = this.querySelector('.ai-image-slider__arrow-prev-{{ ai_gen_id }}');
        this.nextButton = this.querySelector('.ai-image-slider__arrow-next-{{ ai_gen_id }}');
        
        this.autoplay = this.dataset.autoplay === 'true';
        this.autoplaySpeed = parseInt(this.dataset.autoplaySpeed) || 3000;

        if (this.slides.length > 1) {
          this.setupDots();
          this.setupEventListeners();
          this.updateSlider();
          
          if (this.autoplay) {
            this.startAutoplay();
          }
        } else {
          this.hideDots();
          this.hideArrows();
        }
      }

      disconnectedCallback() {
        this.stopAutoplay();
      }

      setupDots() {
        if (!this.dotsContainer) return;
        
        this.dotsContainer.innerHTML = '';
        this.slides.forEach((_, index) => {
          const dot = document.createElement('button');
          dot.className = `ai-image-slider__dot-{{ ai_gen_id }}`;
          dot.setAttribute('aria-label', `Go to slide ${index + 1}`);
          dot.addEventListener('click', () => this.goToSlide(index));
          this.dotsContainer.appendChild(dot);
        });
      }

      setupEventListeners() {
        if (this.prevButton) {
          this.prevButton.addEventListener('click', () => this.previousSlide());
        }
        
        if (this.nextButton) {
          this.nextButton.addEventListener('click', () => this.nextSlide());
        }

        this.addEventListener('mouseenter', () => this.stopAutoplay());
        this.addEventListener('mouseleave', () => {
          if (this.autoplay) {
            this.startAutoplay();
          }
        });
      }

      goToSlide(index) {
        this.currentSlide = index;
        this.updateSlider();
        this.restartAutoplay();
      }

      nextSlide() {
        this.currentSlide = (this.currentSlide + 1) % this.slides.length;
        this.updateSlider();
        this.restartAutoplay();
      }

      previousSlide() {
        this.currentSlide = this.currentSlide === 0 ? this.slides.length - 1 : this.currentSlide - 1;
        this.updateSlider();
        this.restartAutoplay();
      }

      updateSlider() {
        const translateX = -this.currentSlide * 100;
        this.track.style.transform = `translateX(${translateX}%)`;
        this.updateDots();
      }

      updateDots() {
        if (!this.dotsContainer) return;
        
        const dots = this.dotsContainer.querySelectorAll('.ai-image-slider__dot-{{ ai_gen_id }}');
        dots.forEach((dot, index) => {
          dot.classList.toggle('active', index === this.currentSlide);
        });
      }

      startAutoplay() {
        if (!this.autoplay || this.slides.length <= 1) return;
        
        this.autoplayInterval = setInterval(() => {
          this.nextSlide();
        }, this.autoplaySpeed);
      }

      stopAutoplay() {
        if (this.autoplayInterval) {
          clearInterval(this.autoplayInterval);
          this.autoplayInterval = null;
        }
      }

      restartAutoplay() {
        this.stopAutoplay();
        if (this.autoplay) {
          this.startAutoplay();
        }
      }

      hideDots() {
        if (this.dotsContainer) {
          this.dotsContainer.style.display = 'none';
        }
      }

      hideArrows() {
        if (this.prevButton) this.prevButton.style.display = 'none';
        if (this.nextButton) this.nextButton.style.display = 'none';
      }
    }

    customElements.define('image-slider-{{ ai_gen_id }}', ImageSlider{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Automatic image slider",
  "settings": [
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "max_width",
      "min": 300,
      "max": 1200,
      "step": 50,
      "unit": "px",
      "label": "Maximum width",
      "default": 800
    },
    {
      "type": "range",
      "id": "slider_height",
      "min": 200,
      "max": 800,
      "step": 50,
      "unit": "px",
      "label": "Slider height",
      "default": 400
    },
    {
      "type": "range",
      "id": "border_radius",
      "min": 0,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Border radius",
      "default": 8
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#f4f4f4"
    },
    {
      "type": "header",
      "content": "Autoplay"
    },
    {
      "type": "checkbox",
      "id": "autoplay",
      "label": "Enable autoplay",
      "default": true
    },
    {
      "type": "range",
      "id": "autoplay_speed",
      "min": 1000,
      "max": 8000,
      "step": 500,
      "unit": "ms",
      "label": "Autoplay speed",
      "default": 3000
    },
    {
      "type": "header",
      "content": "Controls"
    },
    {
      "type": "checkbox",
      "id": "show_arrows",
      "label": "Show navigation arrows",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_dots",
      "label": "Show dot indicators",
      "default": true
    },
    {
      "type": "color",
      "id": "dot_active_color",
      "label": "Active dot color",
      "default": "#ffffff"
    },
    {
      "type": "header",
      "content": "Text overlay"
    },
    {
      "type": "select",
      "id": "text_alignment",
      "label": "Text alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "left"
    },
    {
      "type": "range",
      "id": "title_size",
      "min": 16,
      "max": 48,
      "step": 2,
      "unit": "px",
      "label": "Title size",
      "default": 28
    },
    {
      "type": "range",
      "id": "description_size",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Description size",
      "default": 16
    },
    {
      "type": "header",
      "content": "Slide 1"
    },
    {
      "type": "image_picker",
      "id": "image_1",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "title_1",
      "label": "Title"
    },
    {
      "type": "textarea",
      "id": "description_1",
      "label": "Description"
    },
    {
      "type": "header",
      "content": "Slide 2"
    },
    {
      "type": "image_picker",
      "id": "image_2",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "title_2",
      "label": "Title"
    },
    {
      "type": "textarea",
      "id": "description_2",
      "label": "Description"
    },
    {
      "type": "header",
      "content": "Slide 3"
    },
    {
      "type": "image_picker",
      "id": "image_3",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "title_3",
      "label": "Title"
    },
    {
      "type": "textarea",
      "id": "description_3",
      "label": "Description"
    },
    {
      "type": "header",
      "content": "Slide 4"
    },
    {
      "type": "image_picker",
      "id": "image_4",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "title_4",
      "label": "Title"
    },
    {
      "type": "textarea",
      "id": "description_4",
      "label": "Description"
    },
    {
      "type": "header",
      "content": "Slide 5"
    },
    {
      "type": "image_picker",
      "id": "image_5",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "title_5",
      "label": "Title"
    },
    {
      "type": "textarea",
      "id": "description_5",
      "label": "Description"
    }
  ],
  "presets": [
    {
      "name": "Automatic image slider"
    }
  ],
  "tag": null
}
{% endschema %}