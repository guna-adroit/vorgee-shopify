{% doc %}
  @prompt
    collection breadcrumb

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-breadcrumb-{{ ai_gen_id }} {
    padding: {{ block.settings.padding_top }}px 0 {{ block.settings.padding_bottom }}px;
    background-color: {{ block.settings.background_color }};
  }

  .ai-breadcrumb-nav-{{ ai_gen_id }} {
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    gap: {{ block.settings.spacing }}px;
    font-size: {{ block.settings.font_size }}px;
    color: {{ block.settings.text_color }};
  }

  .ai-breadcrumb-item-{{ ai_gen_id }} {
    display: flex;
    align-items: center;
    gap: {{ block.settings.spacing }}px;
  }

  .ai-breadcrumb-link-{{ ai_gen_id }} {
    color: inherit;
    text-decoration: none;
    transition: opacity 0.2s ease;
  }

  .ai-breadcrumb-link-{{ ai_gen_id }}:hover {
    opacity: 0.7;
    text-decoration: underline;
  }

  .ai-breadcrumb-current-{{ ai_gen_id }} {
    color: {{ block.settings.current_color }};
    font-weight: {{ block.settings.current_font_weight }};
  }

  .ai-breadcrumb-separator-{{ ai_gen_id }} {
    color: {{ block.settings.separator_color }};
    font-size: {{ block.settings.separator_size }}px;
    user-select: none;
  }

  @media screen and (max-width: 749px) {
    .ai-breadcrumb-nav-{{ ai_gen_id }} {
      font-size: {{ block.settings.font_size | minus: 2 }}px;
    }
    .ai-breadcrumb-{{ ai_gen_id }} {
      padding: {{ block.settings.padding_top | minus: 30 }}px 0 {{ block.settings.padding_bottom | minus: 30 }}px;
    }
  }
{% endstyle %}

<div class="ai-breadcrumb-{{ ai_gen_id }}" {{ block.shopify_attributes }}>
  <nav class="ai-breadcrumb-nav-{{ ai_gen_id }}" aria-label="Breadcrumb">
    <div class="ai-breadcrumb-item-{{ ai_gen_id }}">
      <a href="{{ routes.root_url }}" class="ai-breadcrumb-link-{{ ai_gen_id }}">
        {{ block.settings.home_text }}
      </a>
    </div>

    {% if collection %}
      {% liquid
        assign breadcrumb_collections = collection.id | split: ','
        assign current_collection = collection
        assign parent_collections = ''
        
        comment
          Check if collection has a parent by looking at collection handles
          This is a simplified approach - in practice, you might need to implement
          a more sophisticated parent-child relationship system
        endcomment
        
        assign collection_handle_parts = collection.handle | split: '-'
        if collection_handle_parts.size > 1
          assign potential_parent_handle = collection_handle_parts | slice: 0, -1 | join: '-'
          assign potential_parent = collections[potential_parent_handle]
          if potential_parent and potential_parent.id != collection.id
            assign parent_collections = potential_parent
          endif
        endif
      %}

      {% if parent_collections != blank %}
        <span class="ai-breadcrumb-separator-{{ ai_gen_id }}" aria-hidden="true">
          {{ block.settings.separator }}
        </span>
        <div class="ai-breadcrumb-item-{{ ai_gen_id }}">
          <a href="{{ parent_collections.url }}" class="ai-breadcrumb-link-{{ ai_gen_id }}">
            {{ parent_collections.title }}
          </a>
        </div>
      {% endif %}

      <span class="ai-breadcrumb-separator-{{ ai_gen_id }}" aria-hidden="true">
        {{ block.settings.separator }}
      </span>
      <div class="ai-breadcrumb-item-{{ ai_gen_id }}">
        <span class="ai-breadcrumb-current-{{ ai_gen_id }}" aria-current="page">
          {{ collection.title }}
        </span>
      </div>
    {% endif %}
  </nav>
</div>

{% schema %}
{
  "name": "Collection breadcrumb",
  "settings": [
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "text",
      "id": "home_text",
      "label": "Home text",
      "default": "Home"
    },
    {
      "type": "text",
      "id": "separator",
      "label": "Separator",
      "default": "/"
    },
    {
      "type": "header",
      "content": "Style"
    },
    {
      "type": "range",
      "id": "font_size",
      "min": 10,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Font size",
      "default": 14
    },
    {
      "type": "range",
      "id": "separator_size",
      "min": 8,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Separator size",
      "default": 14
    },
    {
      "type": "range",
      "id": "spacing",
      "min": 4,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Item spacing",
      "default": 8
    },
    {
      "type": "select",
      "id": "current_font_weight",
      "label": "Current page font weight",
      "options": [
        {
          "value": "400",
          "label": "Normal"
        },
        {
          "value": "500",
          "label": "Medium"
        },
        {
          "value": "600",
          "label": "Semi bold"
        },
        {
          "value": "700",
          "label": "Bold"
        }
      ],
      "default": "500"
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "current_color",
      "label": "Current page",
      "default": "#666666"
    },
    {
      "type": "color",
      "id": "separator_color",
      "label": "Separator",
      "default": "#999999"
    },
    {
      "type": "header",
      "content": "Spacing"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 50,
      "step": 5,
      "unit": "px",
      "label": "Top padding",
      "default": 15
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 50,
      "step": 5,
      "unit": "px",
      "label": "Bottom padding",
      "default": 15
    }
  ],
  "presets": [
    {
      "name": "Collection breadcrumb"
    }
  ],
  "tag": null
}
{% endschema %}